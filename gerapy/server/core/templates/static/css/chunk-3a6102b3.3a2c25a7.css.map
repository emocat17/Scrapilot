{"version":3,"sources":["webpack:///src/views/project/D:/GitWork/Scrapilot/gerapy/client/src/views/project/src/views/project/Deploy.vue","chunk-3a6102b3.3a2c25a7.css"],"names":[],"mappings":"AAyXA,mBACA,eCvXA","file":"chunk-3a6102b3.3a2c25a7.css","sourcesContent":["<template>\r\n  <div>\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"24\">\r\n        <div class=\"panel\">\r\n          <panel-title :title=\"$lang.titles.deployProject\"> </panel-title>\r\n          <div class=\"panel-body\">\r\n            <el-table\r\n              :data=\"clients\"\r\n              v-loading=\"loading\"\r\n              :element-loading-text=\"$lang.messages.loading\"\r\n              @selection-change=\"onBatchSelect\"\r\n              :style=\"{ width: '100%' }\"\r\n            >\r\n              <el-table-column align=\"center\" type=\"selection\" width=\"55\">\r\n              </el-table-column>\r\n              <el-table-column\r\n                align=\"center\"\r\n                :label=\"$lang.columns.status\"\r\n                width=\"100\"\r\n              >\r\n                <template slot-scope=\"props\">\r\n                  <el-button\r\n                    :type=\"statusClass[clientsStatus[props.row.pk]]\"\r\n                    size=\"mini\"\r\n                  >\r\n                    {{ statusText[clientsStatus[props.row.pk]] }}\r\n                  </el-button>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column\r\n                align=\"center\"\r\n                prop=\"pk\"\r\n                :label=\"$lang.columns.id\"\r\n                width=\"60\"\r\n              >\r\n              </el-table-column>\r\n              <el-table-column\r\n                align=\"center\"\r\n                prop=\"fields.name\"\r\n                :label=\"$lang.columns.name\"\r\n                width=\"100\"\r\n              >\r\n              </el-table-column>\r\n              <el-table-column\r\n                align=\"center\"\r\n                prop=\"fields.ip\"\r\n                :label=\"$lang.columns.ip\"\r\n                width=\"150\"\r\n              >\r\n              </el-table-column>\r\n              <el-table-column\r\n                align=\"center\"\r\n                prop=\"fields.port\"\r\n                :label=\"$lang.columns.port\"\r\n                width=\"100\"\r\n              >\r\n              </el-table-column>\r\n              <el-table-column\r\n                align=\"center\"\r\n                :label=\"$lang.columns.description\"\r\n              >\r\n                <template slot-scope=\"props\">\r\n                  <span>{{ projectDescriptions[props.row.pk] }}</span>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column align=\"center\" :label=\"$lang.columns.deployedAt\">\r\n                <template slot-scope=\"props\">\r\n                  <span>{{ projectDateTimes[props.row.pk] }}</span>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column align=\"center\" :label=\"$lang.columns.operations\">\r\n                <template slot-scope=\"props\">\r\n                  <el-button\r\n                    type=\"success\"\r\n                    size=\"mini\"\r\n                    @click=\"onDeploy(props.row.pk)\"\r\n                    v-if=\"clientsStatus[props.row.pk]\"\r\n                  >\r\n                    <i class=\"fa fa-cloud-upload\"></i>\r\n                    {{ $lang.buttons.deploy }}\r\n                  </el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n            <bottom-bar>\r\n              <el-button\r\n                slot=\"handler\"\r\n                type=\"primary\"\r\n                size=\"mini\"\r\n                :disabled=\"batchSelect.length === 0\"\r\n                @click=\"onBatchDeploy\"\r\n                slot-scope=\"handler\"\r\n              >\r\n                <span>\r\n                  <i class=\"fa fa-cloud-upload\"></i>\r\n                  {{ $lang.buttons.batchDeploy }}\r\n                </span>\r\n              </el-button>\r\n            </bottom-bar>\r\n          </div>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"12\">\r\n        <div class=\"panel\">\r\n          <panel-title :title=\"$lang.objects.project\"> </panel-title>\r\n          <div class=\"panel-body\">\r\n            <el-form :model=\"buildInfo\" label-width=\"120px\">\r\n              <el-form-item :label=\"$lang.columns.name\">\r\n                {{ buildInfo.name }}\r\n              </el-form-item>\r\n              <el-form-item :label=\"$lang.columns.packageName\">\r\n                {{ buildInfo.egg || notBuildText }}\r\n              </el-form-item>\r\n              <el-form-item :label=\"$lang.columns.builtAt\">\r\n                {{ buildInfo.built_at || notBuildText }}\r\n              </el-form-item>\r\n            </el-form>\r\n          </div>\r\n        </div>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <div class=\"panel\">\r\n          <panel-title :title=\"$lang.titles.buildProject\"> </panel-title>\r\n          <div class=\"panel-body\">\r\n            <el-form\r\n              ref=\"form\"\r\n              :model=\"buildInfo\"\r\n              :rules=\"rules\"\r\n              label-width=\"120px\"\r\n            >\r\n              <el-form-item :label=\"$lang.columns.name\">\r\n                {{ buildInfo.name }}\r\n              </el-form-item>\r\n              <el-form-item\r\n                :label=\"$lang.columns.description\"\r\n                prop=\"description\"\r\n                class=\"description\"\r\n              >\r\n                <el-input\r\n                  v-model=\"buildInfo.description\"\r\n                  size=\"small\"\r\n                ></el-input>\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <el-button type=\"primary\" size=\"small\" @click=\"onBuild\">\r\n                  <i class=\"fa fa-codepen\"></i> \r\n                  <span v-if=\"buildInfo.egg\"> {{ $lang.buttons.re }}</span>{{ $lang.buttons.build }}\r\n                </el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n          </div>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n<script type=\"text/javascript\">\r\nimport PanelTitle from \"../../components/PanelTitle\";\r\nimport BottomBar from \"../../components/BottomBar\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      buildInfo: {},\r\n      notBuildText: this.$store.getters.$lang.messages.notBuilt,\r\n      clients: [],\r\n      loading: false,\r\n      projectName: this.$route.params.name,\r\n      batchSelect: [],\r\n      projectDescriptions: {},\r\n      projectDateTimes: {},\r\n      clientsStatus: {},\r\n      statusClass: {\r\n        \"1\": \"success\",\r\n        \"0\": \"warning\",\r\n        \"-1\": \"danger\",\r\n      },\r\n      statusText: {\r\n        \"1\": this.$store.getters.$lang.buttons.normal,\r\n        \"0\": this.$store.getters.$lang.buttons.connecting,\r\n        \"-1\": this.$store.getters.$lang.buttons.error,\r\n      },\r\n      rules: {\r\n        description: [\r\n          {\r\n            required: true,\r\n            message: this.$store.getters.$lang.messages.emptyDescription,\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  components: {\r\n    PanelTitle,\r\n    BottomBar,\r\n  },\r\n  created() {\r\n    this.getClientData();\r\n    this.getBuildInfo();\r\n  },\r\n  methods: {\r\n    onBatchSelect(val) {\r\n      this.batchSelect = val;\r\n      console.log(this.batchSelect);\r\n    },\r\n    getBuildInfo() {\r\n      this.loading = true;\r\n      this.$http\r\n        .get(\r\n          this.formatString(this.$store.state.url.project.build, {\r\n            name: this.projectName,\r\n          })\r\n        )\r\n        .then(({ data: data }) => {\r\n          this.buildInfo = data;\r\n          console.log(data);\r\n          this.loading = false;\r\n        })\r\n        .catch(() => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n    getClientStatus(id) {\r\n      this.$set(this.clientsStatus, id, 0);\r\n      this.$http\r\n        .get(\r\n          this.formatString(this.$store.state.url.client.status, {\r\n            id: id,\r\n          })\r\n        )\r\n        .then(({ data: { result: data } }) => {\r\n          this.$set(this.clientsStatus, id, data);\r\n        })\r\n        .catch(() => {\r\n          this.$set(this.clientsStatus, id, -1);\r\n        });\r\n    },\r\n    getClientData() {\r\n      this.loading = true;\r\n      this.$http\r\n        .get(this.$store.state.url.client.index)\r\n        .then(({ data: clients }) => {\r\n          this.clients = clients;\r\n          this.loading = false;\r\n          this.clients.forEach(({ pk: id }) => {\r\n            this.getProjectVersion(id);\r\n            this.getClientStatus(id);\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n    deploy(id) {\r\n      if (this.clientsStatus[id]) {\r\n        this.$http\r\n          .post(\r\n            this.formatString(this.$store.state.url.client.projectDeploy, {\r\n              id: id,\r\n              name: this.projectName,\r\n            })\r\n          )\r\n          .then(() => {\r\n            this.$message.success(\r\n              this.$store.getters.$lang.titles.client +\r\n                \" \" +\r\n                id +\r\n                \" \" +\r\n                this.$store.getters.$lang.messages.successDeploy\r\n            );\r\n            this.getProjectVersion(id);\r\n            this.loading = false;\r\n          })\r\n          .catch(() => {\r\n            this.$message.error(\r\n              this.$store.getters.$lang.titles.client +\r\n                \" \" +\r\n                id +\r\n                \" \" +\r\n                this.$store.getters.$lang.messages.errorDeploy\r\n            );\r\n            this.loading = false;\r\n          });\r\n      } else {\r\n        this.$message.error(\r\n          this.$store.getters.$lang.titles.client +\r\n            \" \" +\r\n            id +\r\n            \" \" +\r\n            this.$store.getters.$lang.messages.errorDeploy\r\n        );\r\n        this.loading = false;\r\n      }\r\n    },\r\n    getProjectVersion(id) {\r\n      this.loading = true;\r\n      this.$http\r\n        .get(\r\n          this.formatString(this.$store.state.url.client.projectVersion, {\r\n            id: id,\r\n            name: this.projectName,\r\n          })\r\n        )\r\n        .then(({ data: version }) => {\r\n          this.$set(this.projectDescriptions, id, version[\"description\"]);\r\n          this.$set(this.projectDateTimes, id, version[\"deployed_at\"]);\r\n          this.loading = false;\r\n        })\r\n        .catch(() => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n    onBatchDeploy() {\r\n      this.$confirm(\r\n        this.$store.getters.$lang.messages.confirm,\r\n        this.$store.getters.$lang.buttons.confirm,\r\n        {\r\n          confirmButtonText: this.$store.getters.$lang.buttons.yes,\r\n          cancelButtonText: this.$store.getters.$lang.buttons.no,\r\n          type: \"warning\",\r\n        }\r\n      )\r\n        .then(() => {\r\n          this.loading = true;\r\n          console.log(this.batchSelect);\r\n          this.batchSelect.forEach(({ pk: id }) => {\r\n            this.deploy(id);\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message.error(this.$store.getters.$lang.messages.errorDeploy);\r\n        });\r\n    },\r\n    onDeploy(id) {\r\n      if (this.buildInfo.egg) {\r\n        this.deploy(id);\r\n      } else {\r\n        this.$message.error(this.$store.getters.$lang.messages.buildFirst);\r\n      }\r\n    },\r\n    onBuild() {\r\n      this.$refs.form.validate((valid) => {\r\n        if (!valid) return false;\r\n        this.$http\r\n          .post(\r\n            this.formatString(this.$store.state.url.project.build, {\r\n              name: this.projectName,\r\n            }),\r\n            {\r\n              description: this.buildInfo[\"description\"],\r\n              egg: this.buildInfo[\"egg\"],\r\n              built_at: this.buildInfo[\"built_at\"],\r\n            }\r\n          )\r\n          .then(({ data: data }) => {\r\n            this.buildInfo = data;\r\n            console.log(data);\r\n            this.loading = false;\r\n            this.$message.success(\r\n              this.$store.getters.$lang.messages.successBuild\r\n            );\r\n          })\r\n          .catch(() => {\r\n            this.loading = false;\r\n            this.$message.error(this.$store.getters.$lang.messages.errorBuild);\r\n          });\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.description input {\r\n  max-width: 200px;\r\n}\r\n</style>\r\n","\n.description input {\r\n  max-width: 200px;\n}\r\n\n\n/*# sourceMappingURL=chunk-3a6102b3.3a2c25a7.css.map*/"]}