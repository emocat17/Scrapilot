{"version":3,"sources":["webpack:///src/views/client/D:/GitWork/Scrapilot/gerapy/client/src/views/client/src/views/client/Schedule.vue","chunk-4a7237a2.531d785c.css"],"names":[],"mappings":"AAyVA,2BACA,iBCvVA","file":"chunk-4a7237a2.531d785c.css","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"panel\" v-if=\"projectsLoading\">\r\n      <div class=\"panel-body\" v-loading=\"projectsLoading\">\r\n        <el-table empty-text=\"\"></el-table>\r\n      </div>\r\n    </div>\r\n    <div class=\"panel\" v-for=\"project in projects\" :key=\"project\">\r\n      <panel-title :title=\"project\"> </panel-title>\r\n      <div class=\"panel-body\" v-loading=\"projectsLoading\">\r\n        <el-table\r\n          :data=\"spiders[project]\"\r\n          v-loading=\"spidersLoading[project]\"\r\n          :style=\"{ width: '100%' }\"\r\n        >\r\n          <el-table-column prop=\"id\" :label=\"$lang.columns.id\" width=\"200\">\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"name\" :label=\"$lang.columns.name\" width=\"400\">\r\n          </el-table-column>\r\n          <el-table-column :label=\"$lang.columns.operations\">\r\n            <template slot-scope=\"props\">\r\n              <el-button\r\n                type=\"success\"\r\n                size=\"mini\"\r\n                @click=\"onStartSpider(project, props.row.name)\"\r\n              >\r\n                <i class=\"fa fa-caret-right\"></i>\r\n                {{ $lang.buttons.run }}\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <el-collapse accordion @change=\"getLog\">\r\n          <el-collapse-item\r\n            v-for=\"job in jobs[project]\"\r\n            :name=\"job.id\"\r\n            :key=\"job.id\"\r\n          >\r\n            <template slot=\"title\">\r\n              <span\r\n                v-if=\"job.spider\"\r\n                class=\"m-l-xs\"\r\n                :style=\"{ minWidth: '120px' }\"\r\n              >\r\n                <i class=\"fa fa-bug\"></i>\r\n                {{ $lang.columns.spiderName }}:\r\n                {{ job.spider }}\r\n              </span>\r\n              <span\r\n                v-if=\"job.spider\"\r\n                class=\"m-l-md\"\r\n                :style=\"{ minWidth: '290px' }\"\r\n              >\r\n                <i class=\"fa fa-key\"></i>\r\n                {{ $lang.columns.jobID }}:\r\n                {{ job.id }}\r\n              </span>\r\n              <span\r\n                v-if=\"job.start_time\"\r\n                class=\"m-l-md\"\r\n                :style=\"{ minWidth: '190px' }\"\r\n              >\r\n                <i class=\"el-icon-time\"></i>\r\n                {{ $lang.columns.startTime }}:\r\n                {{ job.start_time.substring(0, 16) }}\r\n              </span>\r\n              <span\r\n                v-if=\"job.end_time\"\r\n                class=\"m-l-md\"\r\n                :style=\"{ minWidth: '190px' }\"\r\n              >\r\n                <i class=\"el-icon-time\"></i>\r\n                {{ $lang.columns.endTime }}:\r\n                {{ job.end_time.substring(0, 16) }}\r\n              </span>\r\n              <span class=\"m-l-md\">\r\n                <el-button\r\n                  :type=\"jobStatusClass[job.status]\"\r\n                  size=\"mini\"\r\n                  class=\"pull-right m-r-md\"\r\n                >\r\n                  <i\r\n                    v-if=\"['pending'].includes(job.status)\"\r\n                    class=\"fa fa-circle-thin\"\r\n                  ></i>\r\n                  <i\r\n                    v-if=\"['running'].includes(job.status)\"\r\n                    class=\"fa fa-spin fa-spinner\"\r\n                  ></i>\r\n                  <i\r\n                    v-if=\"['finished'].includes(job.status)\"\r\n                    class=\"fa fa-check\"\r\n                  ></i>\r\n                  {{ jobStatusText[job.status] }}\r\n                </el-button>\r\n                <el-button\r\n                  type=\"danger\"\r\n                  size=\"mini\"\r\n                  class=\"pull-right m-r-md\"\r\n                  v-if=\"['pending', 'running'].includes(job.status)\"\r\n                  @click.stop=\"onCancelJob(job.id)\"\r\n                >\r\n                  <i class=\"fa fa-remove\"></i>\r\n                  <span v-if=\"['pending'].includes(job.status)\">\r\n                    {{ $lang.buttons.cancel }}\r\n                  </span>\r\n                  <span v-if=\"['running'].includes(job.status)\">\r\n                    {{ $lang.buttons.stop }}\r\n                  </span>\r\n                </el-button>\r\n              </span>\r\n            </template>\r\n            <div v-loading=\"logLoading\" :element-loading-text=\"logLoadingText\">\r\n              <pre>{{ logs[job.id] }}</pre>\r\n            </div>\r\n          </el-collapse-item>\r\n        </el-collapse>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport PanelTitle from \"../../components/PanelTitle\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 连续获取错误次数\r\n      errorCount: 0,\r\n      // 所有项目\r\n      projects: [],\r\n      // 加载projects标志\r\n      projectsLoading: true,\r\n      // 所有爬虫 {'project1': ['spider1', 'spider2'], 'project2': ['spider1']}\r\n      spiders: {},\r\n      // 加载spiders标志\r\n      spidersLoading: {},\r\n      // 所有任务 {'project1': [{'id': '', 'spider': '', 'status': ''}]}\r\n      jobs: {},\r\n      // 任务状态\r\n      jobStatuses: [\"finished\", \"running\", \"pending\"],\r\n      // 任务状态class\r\n      jobStatusClass: {\r\n        finished: \"info\",\r\n        running: \"success\",\r\n        pending: \"warning\",\r\n      },\r\n      // 任务状态文本\r\n      jobStatusText: {\r\n        finished: this.$store.getters.$lang.buttons.finished,\r\n        running: this.$store.getters.$lang.buttons.running,\r\n        pending: this.$store.getters.$lang.buttons.pending,\r\n      },\r\n      // 任务信息 {'jobid': {'spider': 'spider1', 'project': 'project1'}}\r\n      jobsInfo: {},\r\n      // 日志信息 {'logid': 'text'}\r\n      logs: {},\r\n      // 加载logs标志\r\n      logLoading: true,\r\n      // 加载log提示语\r\n      logLoadingText: this.$store.getters.$lang.messages.loading,\r\n      // 定时刷新log指针\r\n      logLoadingInterval: null,\r\n      // 标记正在加载哪个log\r\n      logLoadingActive: null,\r\n      // 路由信息\r\n      routeId: this.$route.params.id,\r\n    };\r\n  },\r\n  components: {\r\n    PanelTitle,\r\n  },\r\n  created() {\r\n    this.getProjects();\r\n    this.$store.commit(\r\n      \"addInterval\",\r\n      setInterval(() => {\r\n        this.getJobs();\r\n      }, 5000)\r\n    );\r\n  },\r\n  methods: {\r\n    //获取所有项目\r\n    getProjects() {\r\n      this.projectsLoading = true;\r\n      this.$http\r\n        .get(\r\n          this.formatString(this.$store.state.url.client.projects, {\r\n            id: this.routeId,\r\n          })\r\n        )\r\n        .then(({ data: data }) => {\r\n          this.projects = data;\r\n          if (this.projects && this.projects.length === 0) {\r\n            this.$message.info(this.$store.getters.$lang.messages.noProjects);\r\n          }\r\n          this.projectsLoading = false;\r\n          this.projects.forEach((project) => {\r\n            this.$set(this.spidersLoading, project, true);\r\n          });\r\n          this.errorCount = 0;\r\n          // 获取所有爬虫\r\n          this.getSpiders();\r\n          // 获取所有任务\r\n          this.getJobs();\r\n        })\r\n        .catch(() => {\r\n          this.projectsLoading = false;\r\n          this.errorCount += 1;\r\n          if (this.errorCount >= 3) {\r\n            this.$message.error(this.$store.getters.$lang.messages.errorLoad);\r\n          } else {\r\n            // 定时任务\r\n            this.$store.commit(\r\n              \"setTimeout\",\r\n              setTimeout(() => {\r\n                this.getProjects();\r\n              }, 500)\r\n            );\r\n          }\r\n        });\r\n    },\r\n    // 获取所有爬虫\r\n    getSpiders() {\r\n      this.projects.forEach((project) => {\r\n        this.$http\r\n          .get(\r\n            this.formatString(this.$store.state.url.client.listSpiders, {\r\n              id: this.routeId,\r\n              project: project,\r\n            })\r\n          )\r\n          .then(({ data: data }) => {\r\n            this.$set(this.spiders, project, data);\r\n            this.$set(this.spidersLoading, project, false);\r\n          })\r\n          .catch(() => {\r\n            this.$set(this.spidersLoading, project, false);\r\n          });\r\n      });\r\n    },\r\n    // 获取所有任务\r\n    getJobs() {\r\n      this.projects.forEach((project) => {\r\n        this.$http\r\n          .get(\r\n            this.formatString(this.$store.state.url.client.listJobs, {\r\n              id: this.routeId,\r\n              project: project,\r\n            })\r\n          )\r\n          .then(({ data: data }) => {\r\n            this.$set(this.jobs, project, data);\r\n            for (let project in this.jobs) {\r\n              let jobs = this.jobs[project];\r\n              jobs.forEach((job) => {\r\n                this.$set(this.jobsInfo, job.id, {\r\n                  project: project,\r\n                  spider: job[\"spider\"],\r\n                });\r\n              });\r\n            }\r\n          });\r\n      });\r\n    },\r\n    // 启动任务\r\n    onStartSpider(project, spider) {\r\n      this.$http\r\n        .get(\r\n          this.formatString(this.$store.state.url.client.startSpider, {\r\n            id: this.routeId,\r\n            project: project,\r\n            spider: spider,\r\n          })\r\n        )\r\n        .then(() => {\r\n          this.$message.success(this.$store.getters.$lang.messages.successRun);\r\n          this.getJobs();\r\n        })\r\n        .catch(() => {\r\n          this.$message.error(this.$store.getters.$lang.messages.errorRun);\r\n        });\r\n    },\r\n    // 获取日志\r\n    getLog(job) {\r\n      // 如果展开日志\r\n      if (job) {\r\n        //设置活跃日志\r\n        this.logLoadingActive = job;\r\n        // 正在加载\r\n        this.logLoading = true;\r\n        // 请求日志\r\n        this.$http\r\n          .get(\r\n            this.formatString(this.$store.state.url.client.getLog, {\r\n              id: this.routeId,\r\n              project: this.jobsInfo[this.logLoadingActive][\"project\"],\r\n              spider: this.jobsInfo[this.logLoadingActive][\"spider\"],\r\n              job: this.logLoadingActive,\r\n              random: Math.random(),\r\n            })\r\n          )\r\n          .then(({ data: data }) => {\r\n            //设置日志字典\r\n            this.$set(this.logs, this.logLoadingActive, data);\r\n            // 加载日志完成\r\n            this.logLoading = false;\r\n            // 定时任务获取最新爬取日志\r\n            this.$store.commit(\r\n              \"setTimeout\",\r\n              setTimeout(() => {\r\n                this.getLog(job);\r\n              }, 2000)\r\n            );\r\n          })\r\n          .catch(() => {\r\n            this.logLoading = false;\r\n          });\r\n      } else {\r\n        //闭合之后停止加载日志\r\n        this.$store.commit(\"clearTimeout\");\r\n      }\r\n    },\r\n    onCancelJob(job) {\r\n      this.$http\r\n        .get(\r\n          this.formatString(this.$store.state.url.client.cancelJob, {\r\n            id: this.routeId,\r\n            project: this.jobsInfo[job][\"project\"],\r\n            job: job,\r\n          })\r\n        )\r\n        .then(() => {\r\n          this.$message.success(this.$store.getters.$lang.messages.canceling);\r\n          this.getJobs();\r\n        })\r\n        .catch(() => {\r\n          this.$message.error(this.$store.getters.$lang.messages.errorCancel);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.el-collapse-item__content {\r\n  padding: 15px 15px;\r\n}\r\n</style>\r\n","\n.el-collapse-item__content {\r\n  padding: 15px 15px;\n}\r\n\n\n/*# sourceMappingURL=chunk-4a7237a2.531d785c.css.map*/"]}