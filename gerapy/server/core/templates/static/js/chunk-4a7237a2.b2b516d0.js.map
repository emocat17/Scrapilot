{"version":3,"sources":["webpack:///./src/views/client/Schedule.vue?66ae","webpack:///./src/views/client/Schedule.vue?5048","webpack:///src/views/client/Schedule.vue","webpack:///./src/views/client/Schedule.vue?fe37","webpack:///./src/views/client/Schedule.vue","webpack:///./src/components/PanelTitle.vue?6395","webpack:///src/components/PanelTitle.vue","webpack:///./src/components/PanelTitle.vue?1762","webpack:///./src/components/PanelTitle.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","expression","attrs","_e","_l","project","key","spidersLoading","style","width","spiders","$lang","columns","id","operations","scopedSlots","_u","fn","props","on","$event","onStartSpider","row","_v","_s","buttons","run","getLog","jobs","job","slot","minWidth","spiderName","spider","jobID","startTime","start_time","substring","endTime","end_time","jobStatusClass","status","includes","jobStatusText","stopPropagation","onCancelJob","cancel","stop","logLoadingText","logs","staticRenderFns","data","errorCount","projects","projectsLoading","jobStatuses","finished","running","pending","jobsInfo","logLoading","logLoadingInterval","logLoadingActive","routeId","components","PanelTitle","created","setInterval","_this","methods","getProjects","get","then","_this2","catch","setTimeout","getSpiders","_this3","getJobs","_this4","_loop","_this5","random","_this6","_this7","component","domProps","title","_t","type"],"mappings":"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","file":"static/js/chunk-4a7237a2.b2b516d0.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Schedule.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.projectsLoading)?_c('div',{staticClass:\"panel\"},[_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.projectsLoading),expression:\"projectsLoading\"}],staticClass:\"panel-body\"},[_c('el-table',{attrs:{\"empty-text\":\"\"}})],1)]):_vm._e(),_vm._l((_vm.projects),function(project){return _c('div',{key:project,staticClass:\"panel\"},[_c('panel-title',{attrs:{\"title\":project}}),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.projectsLoading),expression:\"projectsLoading\"}],staticClass:\"panel-body\"},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.spidersLoading[project]),expression:\"spidersLoading[project]\"}],style:({ width: '100%' }),attrs:{\"data\":_vm.spiders[project]}},[_c('el-table-column',{attrs:{\"prop\":\"id\",\"label\":_vm.$lang.columns.id,\"width\":\"200\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":_vm.$lang.columns.name,\"width\":\"400\"}}),_c('el-table-column',{attrs:{\"label\":_vm.$lang.columns.operations},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.onStartSpider(project, props.row.name)}}},[_c('i',{staticClass:\"fa fa-caret-right\"}),_vm._v(\"\\n              \"+_vm._s(_vm.$lang.buttons.run)+\"\\n            \")])]}}],null,true)})],1),_c('el-collapse',{attrs:{\"accordion\":\"\"},on:{\"change\":_vm.getLog}},_vm._l((_vm.jobs[project]),function(job){return _c('el-collapse-item',{key:job.id,attrs:{\"name\":job.id}},[_c('template',{slot:\"title\"},[(job.spider)?_c('span',{staticClass:\"m-l-xs\",style:({ minWidth: '120px' })},[_c('i',{staticClass:\"fa fa-bug\"}),_vm._v(\"\\n              \"+_vm._s(_vm.$lang.columns.spiderName)+\":\\n              \"+_vm._s(job.spider)+\"\\n            \")]):_vm._e(),(job.spider)?_c('span',{staticClass:\"m-l-md\",style:({ minWidth: '290px' })},[_c('i',{staticClass:\"fa fa-key\"}),_vm._v(\"\\n              \"+_vm._s(_vm.$lang.columns.jobID)+\":\\n              \"+_vm._s(job.id)+\"\\n            \")]):_vm._e(),(job.start_time)?_c('span',{staticClass:\"m-l-md\",style:({ minWidth: '190px' })},[_c('i',{staticClass:\"el-icon-time\"}),_vm._v(\"\\n              \"+_vm._s(_vm.$lang.columns.startTime)+\":\\n              \"+_vm._s(job.start_time.substring(0, 16))+\"\\n            \")]):_vm._e(),(job.end_time)?_c('span',{staticClass:\"m-l-md\",style:({ minWidth: '190px' })},[_c('i',{staticClass:\"el-icon-time\"}),_vm._v(\"\\n              \"+_vm._s(_vm.$lang.columns.endTime)+\":\\n              \"+_vm._s(job.end_time.substring(0, 16))+\"\\n            \")]):_vm._e(),_c('span',{staticClass:\"m-l-md\"},[_c('el-button',{staticClass:\"pull-right m-r-md\",attrs:{\"type\":_vm.jobStatusClass[job.status],\"size\":\"mini\"}},[(['pending'].includes(job.status))?_c('i',{staticClass:\"fa fa-circle-thin\"}):_vm._e(),(['running'].includes(job.status))?_c('i',{staticClass:\"fa fa-spin fa-spinner\"}):_vm._e(),(['finished'].includes(job.status))?_c('i',{staticClass:\"fa fa-check\"}):_vm._e(),_vm._v(\"\\n                \"+_vm._s(_vm.jobStatusText[job.status])+\"\\n              \")]),(['pending', 'running'].includes(job.status))?_c('el-button',{staticClass:\"pull-right m-r-md\",attrs:{\"type\":\"danger\",\"size\":\"mini\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.onCancelJob(job.id)}}},[_c('i',{staticClass:\"fa fa-remove\"}),(['pending'].includes(job.status))?_c('span',[_vm._v(\"\\n                  \"+_vm._s(_vm.$lang.buttons.cancel)+\"\\n                \")]):_vm._e(),(['running'].includes(job.status))?_c('span',[_vm._v(\"\\n                  \"+_vm._s(_vm.$lang.buttons.stop)+\"\\n                \")]):_vm._e()]):_vm._e()],1)]),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.logLoading),expression:\"logLoading\"}],attrs:{\"element-loading-text\":_vm.logLoadingText}},[_c('pre',[_vm._v(_vm._s(_vm.logs[job.id]))])])],2)}),1)],1)],1)})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div class=\"panel\" v-if=\"projectsLoading\">\r\n      <div class=\"panel-body\" v-loading=\"projectsLoading\">\r\n        <el-table empty-text=\"\"></el-table>\r\n      </div>\r\n    </div>\r\n    <div class=\"panel\" v-for=\"project in projects\" :key=\"project\">\r\n      <panel-title :title=\"project\"> </panel-title>\r\n      <div class=\"panel-body\" v-loading=\"projectsLoading\">\r\n        <el-table\r\n          :data=\"spiders[project]\"\r\n          v-loading=\"spidersLoading[project]\"\r\n          :style=\"{ width: '100%' }\"\r\n        >\r\n          <el-table-column prop=\"id\" :label=\"$lang.columns.id\" width=\"200\">\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"name\" :label=\"$lang.columns.name\" width=\"400\">\r\n          </el-table-column>\r\n          <el-table-column :label=\"$lang.columns.operations\">\r\n            <template slot-scope=\"props\">\r\n              <el-button\r\n                type=\"success\"\r\n                size=\"mini\"\r\n                @click=\"onStartSpider(project, props.row.name)\"\r\n              >\r\n                <i class=\"fa fa-caret-right\"></i>\r\n                {{ $lang.buttons.run }}\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <el-collapse accordion @change=\"getLog\">\r\n          <el-collapse-item\r\n            v-for=\"job in jobs[project]\"\r\n            :name=\"job.id\"\r\n            :key=\"job.id\"\r\n          >\r\n            <template slot=\"title\">\r\n              <span\r\n                v-if=\"job.spider\"\r\n                class=\"m-l-xs\"\r\n                :style=\"{ minWidth: '120px' }\"\r\n              >\r\n                <i class=\"fa fa-bug\"></i>\r\n                {{ $lang.columns.spiderName }}:\r\n                {{ job.spider }}\r\n              </span>\r\n              <span\r\n                v-if=\"job.spider\"\r\n                class=\"m-l-md\"\r\n                :style=\"{ minWidth: '290px' }\"\r\n              >\r\n                <i class=\"fa fa-key\"></i>\r\n                {{ $lang.columns.jobID }}:\r\n                {{ job.id }}\r\n              </span>\r\n              <span\r\n                v-if=\"job.start_time\"\r\n                class=\"m-l-md\"\r\n                :style=\"{ minWidth: '190px' }\"\r\n              >\r\n                <i class=\"el-icon-time\"></i>\r\n                {{ $lang.columns.startTime }}:\r\n                {{ job.start_time.substring(0, 16) }}\r\n              </span>\r\n              <span\r\n                v-if=\"job.end_time\"\r\n                class=\"m-l-md\"\r\n                :style=\"{ minWidth: '190px' }\"\r\n              >\r\n                <i class=\"el-icon-time\"></i>\r\n                {{ $lang.columns.endTime }}:\r\n                {{ job.end_time.substring(0, 16) }}\r\n              </span>\r\n              <span class=\"m-l-md\">\r\n                <el-button\r\n                  :type=\"jobStatusClass[job.status]\"\r\n                  size=\"mini\"\r\n                  class=\"pull-right m-r-md\"\r\n                >\r\n                  <i\r\n                    v-if=\"['pending'].includes(job.status)\"\r\n                    class=\"fa fa-circle-thin\"\r\n                  ></i>\r\n                  <i\r\n                    v-if=\"['running'].includes(job.status)\"\r\n                    class=\"fa fa-spin fa-spinner\"\r\n                  ></i>\r\n                  <i\r\n                    v-if=\"['finished'].includes(job.status)\"\r\n                    class=\"fa fa-check\"\r\n                  ></i>\r\n                  {{ jobStatusText[job.status] }}\r\n                </el-button>\r\n                <el-button\r\n                  type=\"danger\"\r\n                  size=\"mini\"\r\n                  class=\"pull-right m-r-md\"\r\n                  v-if=\"['pending', 'running'].includes(job.status)\"\r\n                  @click.stop=\"onCancelJob(job.id)\"\r\n                >\r\n                  <i class=\"fa fa-remove\"></i>\r\n                  <span v-if=\"['pending'].includes(job.status)\">\r\n                    {{ $lang.buttons.cancel }}\r\n                  </span>\r\n                  <span v-if=\"['running'].includes(job.status)\">\r\n                    {{ $lang.buttons.stop }}\r\n                  </span>\r\n                </el-button>\r\n              </span>\r\n            </template>\r\n            <div v-loading=\"logLoading\" :element-loading-text=\"logLoadingText\">\r\n              <pre>{{ logs[job.id] }}</pre>\r\n            </div>\r\n          </el-collapse-item>\r\n        </el-collapse>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport PanelTitle from \"../../components/PanelTitle\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 连续获取错误次数\r\n      errorCount: 0,\r\n      // 所有项目\r\n      projects: [],\r\n      // 加载projects标志\r\n      projectsLoading: true,\r\n      // 所有爬虫 {'project1': ['spider1', 'spider2'], 'project2': ['spider1']}\r\n      spiders: {},\r\n      // 加载spiders标志\r\n      spidersLoading: {},\r\n      // 所有任务 {'project1': [{'id': '', 'spider': '', 'status': ''}]}\r\n      jobs: {},\r\n      // 任务状态\r\n      jobStatuses: [\"finished\", \"running\", \"pending\"],\r\n      // 任务状态class\r\n      jobStatusClass: {\r\n        finished: \"info\",\r\n        running: \"success\",\r\n        pending: \"warning\",\r\n      },\r\n      // 任务状态文本\r\n      jobStatusText: {\r\n        finished: this.$store.getters.$lang.buttons.finished,\r\n        running: this.$store.getters.$lang.buttons.running,\r\n        pending: this.$store.getters.$lang.buttons.pending,\r\n      },\r\n      // 任务信息 {'jobid': {'spider': 'spider1', 'project': 'project1'}}\r\n      jobsInfo: {},\r\n      // 日志信息 {'logid': 'text'}\r\n      logs: {},\r\n      // 加载logs标志\r\n      logLoading: true,\r\n      // 加载log提示语\r\n      logLoadingText: this.$store.getters.$lang.messages.loading,\r\n      // 定时刷新log指针\r\n      logLoadingInterval: null,\r\n      // 标记正在加载哪个log\r\n      logLoadingActive: null,\r\n      // 路由信息\r\n      routeId: this.$route.params.id,\r\n    };\r\n  },\r\n  components: {\r\n    PanelTitle,\r\n  },\r\n  created() {\r\n    this.getProjects();\r\n    this.$store.commit(\r\n      \"addInterval\",\r\n      setInterval(() => {\r\n        this.getJobs();\r\n      }, 5000)\r\n    );\r\n  },\r\n  methods: {\r\n    //获取所有项目\r\n    getProjects() {\r\n      this.projectsLoading = true;\r\n      this.$http\r\n        .get(\r\n          this.formatString(this.$store.state.url.client.projects, {\r\n            id: this.routeId,\r\n          })\r\n        )\r\n        .then(({ data: data }) => {\r\n          this.projects = data;\r\n          if (this.projects && this.projects.length === 0) {\r\n            this.$message.info(this.$store.getters.$lang.messages.noProjects);\r\n          }\r\n          this.projectsLoading = false;\r\n          this.projects.forEach((project) => {\r\n            this.$set(this.spidersLoading, project, true);\r\n          });\r\n          this.errorCount = 0;\r\n          // 获取所有爬虫\r\n          this.getSpiders();\r\n          // 获取所有任务\r\n          this.getJobs();\r\n        })\r\n        .catch(() => {\r\n          this.projectsLoading = false;\r\n          this.errorCount += 1;\r\n          if (this.errorCount >= 3) {\r\n            this.$message.error(this.$store.getters.$lang.messages.errorLoad);\r\n          } else {\r\n            // 定时任务\r\n            this.$store.commit(\r\n              \"setTimeout\",\r\n              setTimeout(() => {\r\n                this.getProjects();\r\n              }, 500)\r\n            );\r\n          }\r\n        });\r\n    },\r\n    // 获取所有爬虫\r\n    getSpiders() {\r\n      this.projects.forEach((project) => {\r\n        this.$http\r\n          .get(\r\n            this.formatString(this.$store.state.url.client.listSpiders, {\r\n              id: this.routeId,\r\n              project: project,\r\n            })\r\n          )\r\n          .then(({ data: data }) => {\r\n            this.$set(this.spiders, project, data);\r\n            this.$set(this.spidersLoading, project, false);\r\n          })\r\n          .catch(() => {\r\n            this.$set(this.spidersLoading, project, false);\r\n          });\r\n      });\r\n    },\r\n    // 获取所有任务\r\n    getJobs() {\r\n      this.projects.forEach((project) => {\r\n        this.$http\r\n          .get(\r\n            this.formatString(this.$store.state.url.client.listJobs, {\r\n              id: this.routeId,\r\n              project: project,\r\n            })\r\n          )\r\n          .then(({ data: data }) => {\r\n            this.$set(this.jobs, project, data);\r\n            for (let project in this.jobs) {\r\n              let jobs = this.jobs[project];\r\n              jobs.forEach((job) => {\r\n                this.$set(this.jobsInfo, job.id, {\r\n                  project: project,\r\n                  spider: job[\"spider\"],\r\n                });\r\n              });\r\n            }\r\n          });\r\n      });\r\n    },\r\n    // 启动任务\r\n    onStartSpider(project, spider) {\r\n      this.$http\r\n        .get(\r\n          this.formatString(this.$store.state.url.client.startSpider, {\r\n            id: this.routeId,\r\n            project: project,\r\n            spider: spider,\r\n          })\r\n        )\r\n        .then(() => {\r\n          this.$message.success(this.$store.getters.$lang.messages.successRun);\r\n          this.getJobs();\r\n        })\r\n        .catch(() => {\r\n          this.$message.error(this.$store.getters.$lang.messages.errorRun);\r\n        });\r\n    },\r\n    // 获取日志\r\n    getLog(job) {\r\n      // 如果展开日志\r\n      if (job) {\r\n        //设置活跃日志\r\n        this.logLoadingActive = job;\r\n        // 正在加载\r\n        this.logLoading = true;\r\n        // 请求日志\r\n        this.$http\r\n          .get(\r\n            this.formatString(this.$store.state.url.client.getLog, {\r\n              id: this.routeId,\r\n              project: this.jobsInfo[this.logLoadingActive][\"project\"],\r\n              spider: this.jobsInfo[this.logLoadingActive][\"spider\"],\r\n              job: this.logLoadingActive,\r\n              random: Math.random(),\r\n            })\r\n          )\r\n          .then(({ data: data }) => {\r\n            //设置日志字典\r\n            this.$set(this.logs, this.logLoadingActive, data);\r\n            // 加载日志完成\r\n            this.logLoading = false;\r\n            // 定时任务获取最新爬取日志\r\n            this.$store.commit(\r\n              \"setTimeout\",\r\n              setTimeout(() => {\r\n                this.getLog(job);\r\n              }, 2000)\r\n            );\r\n          })\r\n          .catch(() => {\r\n            this.logLoading = false;\r\n          });\r\n      } else {\r\n        //闭合之后停止加载日志\r\n        this.$store.commit(\"clearTimeout\");\r\n      }\r\n    },\r\n    onCancelJob(job) {\r\n      this.$http\r\n        .get(\r\n          this.formatString(this.$store.state.url.client.cancelJob, {\r\n            id: this.routeId,\r\n            project: this.jobsInfo[job][\"project\"],\r\n            job: job,\r\n          })\r\n        )\r\n        .then(() => {\r\n          this.$message.success(this.$store.getters.$lang.messages.canceling);\r\n          this.getJobs();\r\n        })\r\n        .catch(() => {\r\n          this.$message.error(this.$store.getters.$lang.messages.errorCancel);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.el-collapse-item__content {\r\n  padding: 15px 15px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Schedule.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Schedule.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Schedule.vue?vue&type=template&id=949bac06&\"\nimport script from \"./Schedule.vue?vue&type=script&lang=js&\"\nexport * from \"./Schedule.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Schedule.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panel-title\"},[(_vm.title)?_c('span',{domProps:{\"textContent\":_vm._s(_vm.title)}}):_vm._e(),_c('div',{staticClass:\"fr\"},[_vm._t(\"default\")],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"panel-title\">\r\n    <span v-if=\"title\" v-text=\"title\"></span>\r\n    <div class=\"fr\">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"PanelTitle\",\r\n  props: {\r\n    title: {\r\n      type: String,\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelTitle.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PanelTitle.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PanelTitle.vue?vue&type=template&id=470d15d1&\"\nimport script from \"./PanelTitle.vue?vue&type=script&lang=js&\"\nexport * from \"./PanelTitle.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}